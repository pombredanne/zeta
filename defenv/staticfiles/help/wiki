[< <style type="text/css"> >]
h1, h2, h3, h4, h5 { 
    margin : 0px;
    padding: 5px 0px 2px 3px;
    background-color : #EAEAFC;
    border-bottom: 1px solid #CCCCCC;
}
[< </style> >]

{{ Toc( position='relative', float='right' ) }}

=== Document with wiki

Projects are not only about great code that works, it also needs to be 
documented well. Project documents can be created in plain-text or using
sophisticated document editors. Nevertheless, the most popular and natural
method of documentation is using plain-text editing, using simple text editors.
But plain-text documents lack rich text representation like HTML pages or like
documents created with office documentation tool.

Essentially, what one looks for in a documentation tool is to be able to
compose their content and to //render// the composed content using rich
graphics. HTML and CSS technology, which is used to build a modern browser is
a fantastic tool to render documents with rich representations. An
essential component in a browser which interprets HTML pages use the
[[ http://en.wikipedia.org/wiki/Document_Object_Model | DOM ]]
(document object model). But HTML documents have some drawbacks,
  * significant markup overhead
  * plethora of tags and attributes
  * notable learning curve

Wiki is a type of documentation, where users can compose their content in
plain text using either the browser or their favourite editor, and use a
wiki-translation tool, translating it into HTML pages. Once translated into
HTML page it can be viewed with our most favorite bowser. Modern web
technology has made this whole process transparent, where by browsers, in part
also act as document editors, interfacing with servers to create, edit, publish
wiki documents.

Some advantages in using wiki for documentation are,
  * text only
  * simple markups that blends with the content to create rich formatted text, 
    with links, tables, images etc.  
  * when used with web-application can be a fantastic tool for multiple users
    to collaborate and compose documents.
  * it can also be circulated around, as it is, without translating it into HTML page
  * can be simulateneously edited by a number of people, all changes are tracked
    and can be reverted.    
  * can leverage on CSS and JavaScript features to create rich documents,
    even ''interactive documents''.

=== Project documentation

The primary purpose of using wiki in Zeta is for project documentation. From
the products perspective the most encouraged way of writing documents is by
using ZWiki markup. Nevertheless, it is possible to compose your documents or
link with other documents in several ways.

==== Features

Following is a snapshot of wiki-documentation features,
  * Creating and editing wiki pages
  * Fully supported ZWiki based documentation 
  * Listing wiki pages in grid-style, where by users can navigate and edit
  * Wiki page downloadable in different formats like ps, pdf and plain-text
  * Timeline of all wiki pages under the project or timeline of a single wiki
    page
  * RSS feed for both timelines
  * Document content can be in many other formats.
  * Redirections.
  * IFRAME based sourcing of both external and internal links.
  * Sourcing documents from repository as wiki pages.
  * title-index of all wiki pages
  * Consolidated list of files attached to wiki pages
  * Tag widget
  * Attachment widget
  * Page info
  * List of authors for a wiki page
  * Up-voting or down-voting wiki page
  * User favorites, and watch list
  * Talk-page
  * Single click review request for wiki-page
  * Navigation to previous page versions
  * Page history
  * Color coded difference between different versions of a page
  * Charts and analytics

Note that the features listed above are only Zeta's wiki / documentation
feature. To learn more about ZWiki markup features, visit
[[ /help/zwiki/ | zwiki help pages ]] and its
[[ /help/zwiki/ZWiki | complete list of syntax ]].

=== Creating a wiki page

When editing a new wiki page, the user can notice three fields other than
the content box. Let us see them one by one,

: summary ::
    Should provide a one line summary about the document.
: type ::
    This must be one of the many values that are created by system
    administrator as //wikitypes//. Certain have special meaning and
    will be precreated during application setup, they are interpreted by the
    application. More on that below.
: sourceurl ::
    If the type value is ''iframe'', then sourceurl must point to a valid http
    url.

==== Wiki types

Wiki type value should indicate how the document content should be
interpreted. If the value does not match one of the following, it will be
interpreted as ZWiki content and will be parsed for ZWiki markup. The
following is a list of alternate ways for interpreting the content.

: html ::
    If the type is choosen as //html// then the document's content will be
    interpreted for Hyper Text markup. In other words, the content will simply
    be rendered on a browser without any translation.
: text ::
    If the type is choosen as //text// then the document's content will be
    rendered in plain-text with pre formatted styling (//pre-wrap//).
: iframe ::
    This is an interesting type to choose. When a wiki page is marked as type
    //iframe//, then the //sourceurl// field must specify the url location of
    the actual content. Note that the url can be from the same domain or from
    an external domain.
: redirect ::
    Some time a wiki page can get redundant and unmaintained. Instead of
    deleting the page, it can be marked as //redirect//, specifying the url of
    the actual page. This avoids dangling links.

=== ZWiki

ZWiki is a custom wiki engine that is built to cater to the needs of Zeta. The 
ZWiki markup syntax is simple and easy to learn. While the primary purpose is
to use ZWiki as project documentation tool, it is possible to use ZWiki markup
almost every where across the application, like, project description, ticket
description, component/milestone/version description, comments etc ...
This makes it easier for the entire team to collaborate and communicate
effectively while also setting up a knowledge base of ideas during development.

Our policy in designing ZWiki is to,
[<Q keep simple things easy, and,
 difficult things possible >]

Users can get started with creating wiki documents with minimal effort.
And for those who are professionals in HTML and CSS will never be limited
in making use of their knowledge to generate rich graphic content. Use the 
Zwiki macros and plugins effectively to integrate HTML and CSS into your 
documents. Check out our [[ /help/ | help pages ]] to see zwiki in action,
which are entirely composed using ZWiki text.

=== How to use wiki ?

Typically a wiki page displays html translated content, page-info, and
its authors.

: Create wiki-page ::
    Wiki-page can be created only under a project and by users having
    //WIKI_CREATE// permission. To create a new wiki page just enter the url
    in the address bar and request the page. This will automatically create a
    new wiki page and provide you with an edit window. Learn how to create
    non-project wiki pages [[ /help/GuestWiki | using guest wiki ]].
: Editing wiki-page ::
    Wiki page editor is a simple text area, deliberately kept simple. While 
    editing, use the //Preview// button to see the translated HTML page
: Manually refreshing wiki page ::
    Wiki pages are translated and cached for performance reason. Thus, it
    could get out-dated when using dynamic macros. To manually translate
    outdated wiki pages, click on the
    {{ Image( '/zetaicons/arrow_refresh.png', 'Translate' ) }} icon.
: Title index ::
    When wiki-page by name //titleindex// is fetched for a project, it will
    list all wiki-pages under the project as hierarchical directory tree.
    for eg, fetching the following url, \\ 
    [<PRE /p/zeta/wiki/titleindex >]
    will list all wiki pages under the project //zeta//
: Directory listing ::
    If wiki url is ending with forward-slash (''/''), it will be
    treated as a request to list all wiki pages under that path.
: Inline editing of wiki pages ::
    Wiki pages can be listed in grid style, enabling users to navigate and
    edit them inline. Use up, down, left, right arrow keys (or mouse)
    navigate from one cell to another. To edit, press Enter, or double click
    on the cell. A suitable edit form will pop-up. Once updating the cell with
    desired value, navigate away from the cell (or press ENTER once again) to
    save it. Note that, cells that cannot be edited are displayed in gray.
: Timeline ::
    Click on the {{ Image( '/zetaicons/time.png', 'Timeline' ) }} icon, to
    visit wiki timelines
: Voting ::
    Click on the {{ Image( '/zetaicons/thumbsup_x.png', 'Up-Vote' ) }} icon
    to up-vote a wiki page or the
    {{ Image( '/zetaicons/thumbsdown_x.png', 'Down-Vote' ) }} icon to
    down-vote a wiki page. User must have //WIKI_VIEW// permission to cast
    their vote.
: Favorite ::
    Click on the favorite
    {{ Image( '/zetaicons/star_selected.png', 'favorite' ) }} icon to select
    or de-select a wiki page as your favorite. Once selected you will be added 
    to the watch-list and will be notified on any updates done to the wiki page.
: Download in other formats ::
    Click on the //download// drop-down menu, and select the format in which
    you would like to download the wiki page.
: Wiki versions ::
    Click on the //ver// drop-down menu, and navigate to desired page version.
: Single click review request ::
    Click on the //review// link and create a review request for the wiki
    page. Select the author and participants for the review. As for
    moderator, the requesting user will become its moderator.
: Talk-page ::
    Goto talkpage to discuss on the wiki-page. User must have
    //WIKICOMMENT_CREATE// permission. Comments can be viewed as Threaded or
    Flat view.
: Attachment ::
    Attach files to wiki-page, using the attachment-widget. To add new
    attachments, click on the
    {{ Image( '/zetaicons/attach.png', 'attachment' ) }} icon, to remove an
    existing attachment click on the cross-bar super-scripted to the attached
    file.
: Tagging ::
    Tag your wiki-pages for easy retrieval, using the tag-widget. To add new 
    tag, click on the
    {{ Image( '/zetaicons/tag_green.png', 'tag' ) }} icon, to remove an
    existing tagname click on the cross-bar super-scripted to the tagname.

'_ Version control _'

One of the essential part of collaborative document editing is version
control.Since wiki is a collaborative form of documentation, it is prone to 
inadvertant mess-ups. Every time a wiki page is edited and submitted to the 
server, its version number is saved. Sometimes, more than one user
might be editing the same page simultaneously, ignorant of the changes being
made by other users. When this happens a conflict occurs. uch conflicts can 
easily be resolved by using history page to check out the differences in each 
of the edits (which are color coded) submitted by users and pull them back into 
a single consistent document.

=== Complete list of fields that accept wiki formatting

We do not limit the wiki formatting to project pages only. This markup can be
used across Zeta in the following,

* Guest wiki pages
* Project's wiki pages
* Wiki talkpage
* Project's home page
* Project description
* Component description
* Milestone description
* Milestone's closing-remark
* Version description
* Ticket description
* Ticket comments
* Review comments

=== Permissions

* //WIKI_VIEW//, to view project wiki page, vote a wiki page, select or
  de-select wiki pages as favorite
* //WIKI_CREATE//, to be able to create a new wiki page
* //WIKICOMMENT_CREATE//, to be able to discuss on wiki page

All the above permissions are project-wise and should be assigned to project
teams.

* //STATICWIKI_CREATE//, to be able to create a new guest wiki page

[[ /help/pms | more about permission system ]]

=== Searching

Every wiki page is converted into a document along with its meta data and
other attributes like, //discussions//, //tagname// and //project// it belongs
to, for indexing. Once indexed they can be searched project-wise or for the
entire site.

=== Analytics

Raw data in database is aggregated, analysed and its results are reported in
charts and graphs.

/* vim: set filetype=zwiki : */
